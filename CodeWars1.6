1. How good are you really?
There was a test in your class and you passed it. Congratulations!
But you're an ambitious person. You want to know if you're better than the average student in your class.
You receive an array with your peers' test scores. Now calculate the average and compare your score!
Return True if you're better, else False!
Note:
Your points are not included in the array of your class's points. For calculating the average point you may add your point to the given array!

function betterThanAverage(classPoints, yourPoints) {
  return yourPoints > classPoints.reduce((a, b) => a + b, 0) / classPoints.length; 
}





2. Beginner Series #4 Cockroach
The cockroach is one of the fastest insects. Write a function which takes its speed in km per hour and returns it in cm per second, 
rounded down to the integer (= floored).

function cockroachSpeed(s) {
  return Math.floor(s/0.036);
}




3. Function 3 - multiplying two numbers
Implement a function which multiplies two numbers.

function multiply (a,b){
  return a*b;
}




4. Reversed Strings
Complete the solution so that it reverses the string passed into it.
'world'  =>  'dlrow'

function solution(str){
  return str.split('').reverse().join('');
}




5. Kata Example Twist
This is an easy twist to the example kata (provided by Codewars when learning how to create your own kata).
Add the value "codewars" to the array websites/Websites 1,000 times.

// add the value "codewars" to the websites array 1,000 times
var websites = []
for(i=0; i<1000; i++){
websites.push("codewars")
  }
  
  
  
  
  6. Will you make it?
  Will you make it?
You were camping with your friends far away from home, but when it's time to go back, you realize that your fuel 
is running out and the nearest pump is 50 miles away! You know that on average, your car runs on about 25 miles per gallon. 
There are 2 gallons left. Considering these factors, write a function that tells you if it is possible to get to the pump or not.
Function should return true (1 in Prolog) if it is possible and false (0 in Prolog) if not. The input values are always positive.

const zeroFuel = (distanceToPump, mpg, fuelLeft) => {
  if(distanceToPump<=mpg*fuelLeft){
    return true;
  }else{
    return false;
  }
};
